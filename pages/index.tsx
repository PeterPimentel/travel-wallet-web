import Head from 'next/head'
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import { useTranslation } from 'next-i18next';
import { useRef } from 'react';

import { LandingHeader } from '../src/components/organism/LandingHeader/LandingHeader'
import { H4 } from '../src/components/atoms/Typography/Typography';

import styles from "./index.module.css"
import { fetchResource } from '../src/service/cms';
import { Feature, FeatureApiResponse } from '../src/types/CMSType';
import { FeatureIcon } from '../src/components/atoms/FeatureIcon/FeatureIcon';
import { FeatureSection } from '../src/components/organism/FeatureSection/FeatureSection';

type HomeProps = {
  cmsData: {
    features: Feature[]
  }
}

export default function Home({ cmsData }: HomeProps) {
  const { t } = useTranslation();

  const homeRef = useRef<HTMLDivElement>(null)
  const featuresRef = useRef<HTMLDivElement>(null)
  const contactRef = useRef<HTMLDivElement>(null)

  const handleScroll = (id: string) => {
    const refs = { home: homeRef, features: featuresRef, contact: contactRef }
    const clickerRef = refs[id]
    if (clickerRef) {
      clickerRef.current.scrollIntoView()
    }
  }

  return (
    <div>
      <Head>
        <title>Travel Wallet</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <LandingHeader onClick={handleScroll} />
      <main className={styles.content}>
        <section id="home">
          Home

        </section>
        <div ref={featuresRef}>
          <FeatureSection features={cmsData.features} />
        </div>
        <div ref={contactRef}>
          <section id="contacts">
            <H4>{t('landing:menu_contacts')}</H4>
          </section>
        </div>
      </main>
    </div>
  )
}

export async function getStaticProps({ locale }) {
  const features = await fetchResource<FeatureApiResponse>('app_features')
  console.log("features", features)
  return {
    props: {
      cmsData: {
        features: features.data
      },
      ...(await serverSideTranslations(locale, ['landing'])),
    },
  };
}